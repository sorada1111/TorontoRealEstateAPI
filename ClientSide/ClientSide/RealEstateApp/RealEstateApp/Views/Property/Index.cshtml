@model IEnumerable<Property>
@{
    ViewBag.Title = "Property Index";
    var Message = ViewBag.Message as string;
    var currentUsername = Context.Session.GetString("Username");
    var currentUserId = Context.Session.GetString("UserId");
    var userRole = Context.Session.GetString("UserRole");
}

@if (currentUserId != null && currentUsername != null)
{
     <div class="search-container">
        <form id="searchForm" method="get" action="@Url.Action("SearchProperty", "Property")">
            <input type="text" id="cityInput" name="city" placeholder="City" />
            <input type="text" id="areaCodeInput" name="areaCode" placeholder="Area Code" maxlength="3" />
            <select id="propertyTypeSelect"  name="propertyType">
                <option value="">-- Select Property Type --</option>
                <option value="Townhouse">Townhouse</option>
                <option value="SemiDetached">Semi-detached house</option>
                <option value="Detached">Detached house</option>
                <option value="Condo">Condo</option>
                <option value="Mansion">Mansion</option>
            </select>
            <input type="text" id="minPrice" name="minPrice" placeholder="Min Price" />
            <input type="text" id="maxPrice" name="maxPrice" placeholder="Max Price" />
            <button type="submit" class="search-btn">Search</button>
        </form>
    </div>

    <div class="row">
        @if (ViewData["Message"] != null)
        {
            <p>@Message</p>
        }
        @if (Model != null && Model.Any())
        {
            @foreach (var property in Model)
            {
                <div class="col-md-3 mb-3">

                    <div class="card h-100">
                        @if (property.PropertyImageUrls != null && property.PropertyImageUrls.Any())
                        {
                            <img src="@Url.Content(property.PropertyImageUrls.First())" class="card-img-top" alt="Property Image">
                        }
                        else
                        {
                            <img src="path-to-default-image.jpg" class="card-img-top" alt="Default Image"> <!-- Default image if none are available -->
                        }
                        <div class="card-body">
                            <h5 class="card-title">@property.PropertyName</h5>
                            <p class="card-text">
                                @if (property.PropertyAddresses != null)
                                {
                                    @property.PropertyAddresses?.StreetAddress

                                    <br />
                                    @property.PropertyAddresses?.City @property.PropertyAddresses?.State @property.PropertyAddresses?.PostalCode

                                    <br />
                                    @property.PropertyAddresses?.Country
                                }
                                else
                                {
                                    <span class="text-muted"></span>
                                }

                            </p>
                            <p class="card-text">Price: @property.Price</p>
                        </div>
                        <div class="card-action-row">
                        <a href="@Url.Action("Details", "Property", new { id = property.PropertyId })" class="btn btn-info rounded">Show Detail</a>
                        @if (userRole == "Admin")
                        {
                            <a href="@Url.Action("EditProperty", "Property", new { id = property.PropertyId})" class="btn btn-warning rounded">Edit</a>
                            <a href="@Url.Action("EditPropertyPrice", "Property", new { id = property.PropertyId})" class="btn btn-primary rounded">Edit Price</a>

                            <button type="button" class="btn btn-danger rounded show-confirmation-modal" data-id="@property.PropertyId">Delete</button>
                        }
                        </div>
                        <div class="card-footer">
                            <small class="text-muted">Last updated @property.DateListed</small>
                        </div>
                    </div>
                </div>

            }
        }

    </div>
    <!-- Modal Delete  -->
    <div class="modal fade" id="confirmationModal" tabindex="-1" role="dialog" aria-labelledby="confirmationModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="confirmationModalLabel">Confirm Deletion</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    Are you sure you want to delete this property?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-danger" id="confirmDelete">Delete</button>
                </div>
            </div>
        </div>
    </div>
  


}
else
{
    <p>Please log in to view properties.</p>
}
@section Scripts {
    <script type="text/javascript">
        $(document).on("click", ".show-confirmation-modal", function () {
            var propertyId = $(this).data("id");
            // Transfer the movieId to the confirm delete button
            $("#confirmDelete").data("id", propertyId);
            // Show the confirmation modal
            $("#confirmationModal").modal("show");
        });
        $("#confirmDelete").click(function () {
            var propertyId = $(this).data("id");
            var form = document.createElement('form');
            document.body.appendChild(form);
            form.method = 'post';
            form.action = '@Url.Action("Delete", "Property")/' + propertyId;

            var input = document.createElement('input');
            input.type = 'hidden';
            input.name = 'propertyId';
            input.value = propertyId;
            form.appendChild(input);

            form.submit();
        });
        // Explicitly handle modal dismissal for Cancel button
        $(document).on("click", ".btn-secondary", function () {
            $("#confirmationModal").modal("hide");
        });

        // Close the modal when the "X" button is clicked
        $(document).on("click", ".close", function () {
            $("#confirmationModal").modal("hide");
        });

        //search
        document.getElementById('searchForm').addEventListener('submit', function (event) {
            event.preventDefault(); // Prevent the default form submission

            var city = document.getElementById('cityInput').value;
            var areaCode = document.getElementById('areaCodeInput').value;
            var propertyType = document.getElementById('propertyTypeSelect').value;
            var minPrice = document.getElementById('minPrice').value;
            var maxPrice = document.getElementById('maxPrice').value;

            if ((minPrice && !maxPrice) || (!minPrice && maxPrice)) {
                alert('Both Min Price and Max Price must be entered');
                event.preventDefault(); // Prevent form submission
            }
            // Determine the action based on user input
            var actionUrl = '@Url.Action("SearchProperty", "Property")';
            this.action = actionUrl;
            this.submit();
        });

    </script>
}

